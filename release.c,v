head	1.10;
access;
symbols;
locks
	root:1.10; strict;
comment	@ * @;


1.10
date	2014.05.05.15.40.53;	author root;	state Exp;
branches;
next	1.9;

1.9
date	2014.05.05.15.36.52;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2014.05.05.15.31.07;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2014.05.05.15.26.58;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2014.05.05.15.21.13;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2014.05.05.15.01.36;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2014.05.05.14.46.18;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2014.05.05.14.39.21;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2014.05.05.14.29.01;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2014.05.05.14.00.26;	author root;	state Exp;
branches;
next	;


desc
@add release function
@


1.10
log
@*** empty log message ***
@
text
@#include"header.h"
//#include"file_operation.h"
//int (*release) (struct inode *, struct file *);
 extern struct file_operations fops;
int scull_release(struct inode *inode, struct file *fileop)
{

printk(KERN_INFO "hello release");
return 0;
}
@


1.9
log
@*** empty log message ***
@
text
@d4 1
a4 1
struct file_operations fops;
@


1.8
log
@*** empty log message ***
@
text
@d2 1
a2 1
#include"file_operation.h"
d4 1
@


1.7
log
@*** empty log message ***
@
text
@d2 1
a2 1
//#include"file_operation.h"
@


1.6
log
@*** empty log message ***
@
text
@d2 1
a2 1
#include"file_operation.h"
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
//#include"header.h"
d4 1
a4 1
int scull_release(struct inode *, struct file *)
@


1.4
log
@*** empty log message ***
@
text
@d3 2
a4 2
int (*release) (struct inode *, struct file *);
int scull_release()
@


1.3
log
@give prototype
@
text
@d3 2
a4 2

scull_release(struct inode * , struct file *)
d8 1
@


1.2
log
@*** empty log message ***
@
text
@d4 1
a4 1
scull_release()
@


1.1
log
@Initial revision
@
text
@d1 5
a5 1
#include"header.h"
d8 1
@
